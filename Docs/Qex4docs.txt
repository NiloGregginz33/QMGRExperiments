These are just the real quantum versions of ex4 and ex8. This helps to validate that what I saw on ex1 and Qex1 captured the whole idea, since it did. I did this at the end bc this is gonna be more to have people play with. 

Best backend chosen: ibm_kyiv
Raw Result Object: PrimitiveResult([SamplerPubResult(data=DataBin(c0=BitArray(<shape=(), num_shots=8192, num_bits=4>)), metadata={'circuit_metadata': {}})], metadata={'execution': {'execution_spans': ExecutionSpans([SliceSpan(<start='2024-12-27 22:44:29', stop='2024-12-27 22:44:47', size=8192>)])}, 'version': 2})
Counts (get_counts): {'1110': 745, '0011': 1277, '1100': 583, '0111': 1065, '0001': 1004, '1000': 517, '0000': 114, '1101': 166, '1010': 793, '0101': 1121, '0100': 136, '1001': 176, '0010': 95, '1111': 101, '1011': 137, '0110': 162}

Measurement Results (Counts):
1110: 745
0011: 1277
1100: 583
0111: 1065
0001: 1004
1000: 517
0000: 114
1101: 166
1010: 793
0101: 1121
0100: 136
1001: 176
0010: 95
1111: 101
1011: 137
0110: 162
BitArray Attributes: ['__abstractmethods__', '__and__', '__annotations__', '__callable_proto_members_only__', '__class__', '__class_getitem__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__invert__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__or__', '__parameters__', '__protocol_attrs__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__slots__', '__str__', '__subclasshook__', '__weakref__', '__xor__', '_abc_impl', '_array', '_bytes_to_bitstring', '_bytes_to_int', '_get_counts', '_is_protocol', '_is_runtime_protocol', '_num_bits', '_prepare_broadcastable', '_shape', 'array', 'bitcount', 'concatenate', 'concatenate_bits', 'concatenate_shots', 'expectation_values', 'from_bool_array', 'from_counts', 'from_samples', 'get_bitstrings', 'get_counts', 'get_int_counts', 'ndim', 'num_bits', 'num_shots', 'postselect', 'reshape', 'shape', 'size', 'slice_bits', 'slice_shots', 'transpose']
BitArray Content: BitArray(<shape=(), num_shots=8192, num_bits=4>)
Measurement Results (Counts):
1110: 745
0011: 1277
1100: 583
0111: 1065
0001: 1004
1000: 517
0000: 114
1101: 166
1010: 793
0101: 1121
0100: 136
1001: 176
0010: 95
1111: 101
1011: 137
0110: 162
BitArray Internal Variables: {'_array': array([[14],
       [ 3],
       [ 3],
       ...,
       [ 7],
       [ 1],
       [ 8]], shape=(8192, 1), dtype=uint8), '_num_bits': 4, '_shape': ()}
Shannon Entropy (Measurement Distribution): 3.5084
C:\Users\manav\Desktop\Experiments\QM1\Qex4.py:352: DeprecationWarning: Treating CircuitInstruction as an iterable is deprecated legacy behavior since Qiskit 1.2, and will be removed in Qiskit 2.0. Instead, use the `operation`, `qubits` and `clbits` named attributes.
  unmeasured_qc.data = [instr for instr in unmeasured_qc.data if instr[0].name != "measure"]  # Remove measurement ops
Total Entropy (Full System): 0.0000
Entropy (Black Hole Subsystem): 1.0000
Entropy (Radiation Subsystem): 1.0000


This shows us with our own eyes what is happening, and displays the relevant statistics about entropy, which is why it is so important bc i didnt display that info in the code earlier
